local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local Debris = game:GetService("Debris")
local TweenService = game:GetService("TweenService")

local remote = ReplicatedStorage:WaitForChild("BigEffectRemote")

remote.OnServerEvent:Connect(function(player)
    local character = player.Character or player.CharacterAdded:Wait()
    local HRP = character:WaitForChild("HumanoidRootPart")
    local humanoid = character:WaitForChild("Humanoid")

    HRP.Anchored = true

    task.spawn(function()
        local animations = {
            {id = "rbxassetid://10478338114", duration = 0.4},
            {id = "rbxassetid://112220709701439", duration = 1.8}
        }
        local animator = humanoid:FindFirstChildWhichIsA("Animator") or Instance.new("Animator", humanoid)
        for i, animData in ipairs(animations) do
            local anim = Instance.new("Animation")
            anim.AnimationId = animData.id
            local track = animator:LoadAnimation(anim)
            track:Play()
            task.wait(animData.duration)
            track:Stop()
            if i == #animations then
                local repeatAnim = Instance.new("Animation")
                repeatAnim.AnimationId = animations[1].id
                local repeatTrack = animator:LoadAnimation(repeatAnim)
                repeatTrack:Play()
                task.wait(0.4)
                repeatTrack:Stop()
            end
        end
    end)

    local function EmitParticlesFrom(effect, amount, enable)
        local clone = effect:Clone()
        clone.Parent = HRP
        for _, child in ipairs(clone:GetChildren()) do
            if child:IsA("ParticleEmitter") then
                child:Emit(amount)
                child.Enabled = enable
            end
        end
        return clone
    end

    local effect1 = EmitParticlesFrom(ReplicatedStorage.Resources.Blackholevfx.Different.Different.expl.ground, 15, true)

    task.wait(0.4)
    local floorEffect
    task.spawn(function()
        task.wait(1.6)
        floorEffect = ReplicatedStorage.Resources.SunsetEffects.Floor.Floor.Attachment:Clone()
        floorEffect.Parent = HRP
        floorEffect.WorldPosition = HRP.Position + Vector3.new(0, -3, 0)
        for _, p in ipairs(floorEffect:GetChildren()) do
            if p:IsA("ParticleEmitter") then
                p:Emit(15)
                p.Enabled = true
            end
        end
        EmitParticlesFrom(ReplicatedStorage.Resources.RobotStuff.ArmCharge.Charge.Start, 1, false)
    end)

    local effect2 = EmitParticlesFrom(ReplicatedStorage.Resources.OldPirate.BlastClutch.Charging.Part.Attachment, 15, true)
    local effect3 = EmitParticlesFrom(ReplicatedStorage.Resources.Blackholevfx.WindInwards.WindInwards.High, 15, true)

    task.wait(1.8)
    effect1:Destroy()
    effect2:Destroy()
    effect3:Destroy()
    if floorEffect then
        floorEffect:Destroy()
        floorEffect = nil
    end
    task.delay(1.1, function()
        HRP.Anchored = false
    end)

    local Test = ReplicatedStorage.Resources.FiveSeasonsFX.JumpFX.JumpFX.BurnMark
    local burnEffect = Test:Clone()
    burnEffect.Parent = HRP
    burnEffect.WorldPosition = burnEffect.WorldPosition + Vector3.new(0, -5.7, 0)
    for _, child in ipairs(burnEffect:GetChildren()) do
        if child:IsA("ParticleEmitter") then
            child:Emit(1)
        end
    end

    local hitbox = Instance.new("Part")
    hitbox.Size = Vector3.new(40, 40, 40)
    hitbox.CFrame = HRP.CFrame
    hitbox.Anchored = true
    hitbox.CanCollide = false
    hitbox.Transparency = 1
    hitbox.Parent = workspace

    for _, part in ipairs(workspace:GetPartsInPart(hitbox)) do
        local char = part:FindFirstAncestorOfClass("Model")
        if char and char ~= character and char:FindFirstChild("HumanoidRootPart") and char:FindFirstChild("Humanoid") then
            local hum = char:FindFirstChild("Humanoid")
            if hum and hum.Health > 0 then
                hum:TakeDamage(30)
            end
            local hrpTarget = char:FindFirstChild("HumanoidRootPart")
            if hrpTarget then
                local bv = Instance.new("BodyVelocity")
                bv.MaxForce = Vector3.new(1e5,1e5,1e5)
                local randomDir = (hrpTarget.Position - HRP.Position).Unit + Vector3.new(math.random(-5,5)*0.1,0,math.random(-5,5)*0.1)
                bv.Velocity = randomDir.Unit * math.random(35,50)
                bv.Parent = hrpTarget
                Debris:AddItem(bv, 0.3)
            end
        end
    end

    hitbox:Destroy()

    local function getGroundMaterialAndColor(origin)
        local rayParams = RaycastParams.new()
        rayParams.FilterDescendantsInstances = {character}
        rayParams.FilterType = Enum.RaycastFilterType.Exclude
        local result = workspace:Raycast(origin, Vector3.new(0, -100, 0), rayParams)
        if result and result.Instance and not Players:GetPlayerFromCharacter(result.Instance.Parent) then
            return result.Material, result.Instance.Color
        else
            return Enum.Material.Slate, Color3.fromRGB(100, 100, 100)
        end
    end

    for i = 1, 10 do
        local rock = Instance.new("Part")
        rock.Size = Vector3.new(2, 2, 2)
        rock.Anchored = false
        rock.CanCollide = true
        rock.Position = HRP.Position + Vector3.new(0, 5, 0)
        local mat, col = getGroundMaterialAndColor(HRP.Position)
        rock.Material = mat
        rock.Color = col
        rock.Parent = workspace
        local bv = Instance.new("BodyVelocity")
        bv.Velocity = Vector3.new(math.random(-50,50), math.random(50,100), math.random(-50,50))
        bv.MaxForce = Vector3.new(1e5,1e5,1e5)
        bv.Parent = rock
        Debris:AddItem(bv, 0.5)
        task.delay(6, function()
            if rock.Parent then
                local startSize = rock.Size
                local startTransparency = rock.Transparency
                local t = 0
                local conn
                conn = RunService.Heartbeat:Connect(function(dt)
                    if rock.Parent then
                        t = t + dt
                        local alpha = math.clamp(t / 2, 0, 1)
                        rock.Size = startSize:Lerp(Vector3.new(0,0,0), alpha)
                        rock.Transparency = startTransparency + alpha
                        if alpha >= 1 then
                            rock:Destroy()
                            conn:Disconnect()
                        end
                    else
                        conn:Disconnect()
                    end
                end)
            end
        end)
        Debris:AddItem(rock, 10)
    end

    local effectList = {
        {ReplicatedStorage.Resources.Blackholevfx.Different.Different.expl,15,false},
        {ReplicatedStorage.Resources.Blackholevfx.Different.Different.Attachment,15,false},
        {ReplicatedStorage.Resources.FinalEffects.LastLand.Center,15,false},
        {ReplicatedStorage.Resources.MonsterAwaken.OtherVfx.Slam1.Part.moreparticle,15,false},
        {ReplicatedStorage.Resources.WWFinisher.hit.hit.Attachment,5,false},
        {ReplicatedStorage.Resources.LastBreath.FinalExplosion.ExpoFx.Impact,15,false},
        {ReplicatedStorage.Resources.RobotFinisher.Hop.Hop.Impact,1,false},
        {ReplicatedStorage.Resources.SunsetEffects.FloorAdjusted.Floor.Attachment,15,false},
        {ReplicatedStorage.Resources.LastBreath.VictimGlint.Part.Attachment,15,false}
    }
    for _, data in ipairs(effectList) do
        EmitParticlesFrom(data[1], data[2], data[3])
    end

    task.spawn(function()
        player.CameraMinZoomDistance = 85
        TweenService:Create(player, TweenInfo.new(2, Enum.EasingStyle.Sine), {CameraMinZoomDistance = 0.05}):Play()
    end)

    local FiveSeasonsFX = ReplicatedStorage.Resources.FiveSeasonsFX
    local FSWhite = FiveSeasonsFX.FSWhite:Clone()
    local FSBlack = FiveSeasonsFX.FSBlack:Clone()
    FSWhite.Parent = game.Lighting
    FSBlack.Parent = game.Lighting

    for _, child in ipairs(player.PlayerGui:GetChildren()) do
        if child.Name == "FXUi" then
            child:Destroy()
        end
    end

    FSWhite.Enabled = true
    task.wait(0.035)
    FSWhite.Enabled = false
    FSBlack.Enabled = true
    task.wait(0.035)
    FSBlack.Enabled = false
    FSWhite:Destroy()
    FSBlack:Destroy()
end)
