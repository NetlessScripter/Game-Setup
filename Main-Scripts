local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local RunService = game:GetService("RunService")
local TweenService = game:GetService("TweenService")
local Lighting = game:GetService("Lighting")

local function SetupCharacterAnimations(Character)
    local Humanoid = Character:WaitForChild("Humanoid")

    local IdleAnim = Instance.new("Animation")
    IdleAnim.AnimationId = "rbxassetid://136087809701317"

    local RunAnim = Instance.new("Animation")
    RunAnim.AnimationId = "rbxassetid://121350640829746"

    local Animator = Humanoid:FindFirstChildOfClass("Animator")
    if not Animator then
        Animator = Instance.new("Animator")
        Animator.Parent = Humanoid
    end

    local IdleTrack = Animator:LoadAnimation(IdleAnim)
    IdleTrack.Looped = true

    local RunTrack = Animator:LoadAnimation(RunAnim)
    RunTrack.Priority = Enum.AnimationPriority.Action

    local MaxSpeed = 48
    local IdleEnabled = true

    local AttachSource = ReplicatedStorage.Resources.CrushingPushFinisher.Charge.Charge.Attachment
    local AttachClone = AttachSource:Clone()
    AttachClone.Parent = Character:WaitForChild("RightHand")

    for _, child in ipairs(AttachClone:GetChildren()) do
        if child:IsA("ParticleEmitter") then
            child.Enabled = false
        end
    end

    local IdleConnection
    IdleConnection = RunService.RenderStepped:Connect(function()
        local root = Character:FindFirstChild("HumanoidRootPart")
        if IdleEnabled and root then
            if root.Velocity.Magnitude < 0.1 then
                if not IdleTrack.IsPlaying then
                    IdleTrack:Play()
                end
                for _, child in ipairs(AttachClone:GetChildren()) do
                    if child:IsA("ParticleEmitter") then
                        child.Enabled = true
                    end
                end
            else
                if IdleTrack.IsPlaying then
                    IdleTrack:Stop()
                end
                for _, child in ipairs(AttachClone:GetChildren()) do
                    if child:IsA("ParticleEmitter") then
                        child.Enabled = false
                    end
                end
            end
        else
            for _, child in ipairs(AttachClone:GetChildren()) do
                if child:IsA("ParticleEmitter") then
                    child.Enabled = false
                end
            end
        end
    end)

    local RunConnection
    RunConnection = RunService.RenderStepped:Connect(function()
        local speed = Humanoid.MoveDirection.Magnitude * Humanoid.WalkSpeed
        if speed > 0 then
            if not RunTrack.IsPlaying then
                RunTrack:Play()
            end
            RunTrack:AdjustSpeed(math.clamp(speed / MaxSpeed, 0, 1))
        elseif RunTrack.IsPlaying then
            RunTrack:Stop()
        end
    end)

    return {
        IdleTrack = IdleTrack,
        RunTrack = RunTrack,
        ToggleIdle = function(state)
            IdleEnabled = state
            if not state and IdleTrack.IsPlaying then
                IdleTrack:Stop()
            end
            for _, child in ipairs(AttachClone:GetChildren()) do
                if child:IsA("ParticleEmitter") then
                    child.Enabled = state
                end
            end
        end,
        Disconnect = function()
            IdleConnection:Disconnect()
            RunConnection:Disconnect()
        end
    }
end

local function SetupForCharacter(Char)
    local AnimController = SetupCharacterAnimations(Char)

    Char:WaitForChild("Humanoid").Died:Connect(function()
        SetupForCharacter(Char)
    end)

    local function SpawnEvent()
        local Test = ReplicatedStorage.Resources.FinalEffects.VictimHit.Root.Center
        local test = Test:Clone()
        test.Parent = Char:WaitForChild("HumanoidRootPart")
        for _, child in ipairs(test:GetChildren()) do
            if child:IsA("ParticleEmitter") then
                child:Emit(15)
                child.Enabled = false
            end
        end

        local Highlight = Instance.new("Highlight")
        Highlight.Name = "Marking"
        Highlight.Parent = Char
        Highlight.Adornee = Char
        Highlight.OutlineColor = Color3.fromRGB(255, 255, 255)
        Highlight.OutlineTransparency = 0.5
        Highlight.FillColor = Color3.fromRGB(255, 255, 255)
        Highlight.FillTransparency = 0.5

        task.delay(1.5, function()
            local tweenInfo = TweenInfo.new(2.4, Enum.EasingStyle.Sine, Enum.EasingDirection.Out)
            local goal = {OutlineTransparency = 1, FillTransparency = 1}
            local tween = TweenService:Create(Highlight, tweenInfo, goal)
            tween:Play()
            tween.Completed:Connect(function()
                Highlight:Destroy()
            end)
        end)
    end

    SpawnEvent()

    local humanoidRootPart = Char:WaitForChild("HumanoidRootPart")
    local spotlight = Instance.new("SpotLight")
    spotlight.Parent = humanoidRootPart
    spotlight.Color = Color3.fromRGB(0, 255, 255)
    spotlight.Brightness = 5
    spotlight.Range = 15
    spotlight.Angle = 60
    spotlight.Face = Enum.NormalId.Top
    spotlight.Shadows = true

    local function makeTrail(part)
        local att1 = Instance.new("Attachment")
        att1.Name = part.Name.."Attachment1"
        att1.Parent = part

        local att2 = Instance.new("Attachment")
        att2.Name = part.Name.."Attachment2"
        att2.Parent = part
        att2.Position = Vector3.new(0, 0.5, 0)

        local trail = Instance.new("Trail")
        trail.Name = part.Name.."Trail"
        trail.Attachment0 = att1
        trail.Attachment1 = att2
        trail.Color = ColorSequence.new({
            ColorSequenceKeypoint.new(0, Color3.fromRGB(0, 255, 255)),
            ColorSequenceKeypoint.new(1, Color3.fromRGB(0, 255, 255))
        })
        trail.FaceCamera = true
        trail.LightEmission = 300
        trail.LightInfluence = 300
        trail.Texture = "rbxassetid://10466997318"
        trail.TextureMode = Enum.TextureMode.Static
        trail.TextureLength = 10
        trail.Lifetime = 0.5
        trail.MaxLength = 0
        trail.MinLength = 0.1
        trail.WidthScale = NumberSequence.new({
            NumberSequenceKeypoint.new(0,0),
            NumberSequenceKeypoint.new(0.5,1),
            NumberSequenceKeypoint.new(1,0)
        })
        trail.Parent = part
    end

    for _, part in ipairs(Char:GetChildren()) do
        if part:IsA("BasePart") then
            makeTrail(part)
        end
    end

    local humanoid = Char:WaitForChild("Humanoid")
    RunService.Heartbeat:Connect(function()
        humanoid.WalkSpeed = 400
    end)
end

Players.PlayerAdded:Connect(function(player)
    player.CharacterAdded:Connect(function(Char)
        SetupForCharacter(Char)
    end)
end)
